{
	"name": "parse_table",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LS_Azure_SQL_DB",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "parse"
				},
				{
					"name": "parse1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empId as integer,",
				"          empName as string,",
				"          skills as string,",
				"          address as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select * from parse_employee',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
				"source1 parse(parseskill = skills ? (skill1 as string,",
				"          skill2 as string,",
				"          skill3 as string),",
				"     format: 'delimited',",
				"     columnNamesAsHeader: false,",
				"     columnDelimiter: '|',",
				"     nullValue: '') ~> parse",
				"parse parse(parseaddress = address ? (city as string,",
				"          country as string),",
				"     format: 'json',",
				"     documentForm: 'singleDocument') ~> parse1",
				"parse1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'output',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     partitionFileNames:['parse_output'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empId,",
				"          empName,",
				"          skills,",
				"          address,",
				"          skill1 = parseskill.skill1,",
				"          skill2 = parseskill.skill2,",
				"          skill3 = parseskill.skill3,",
				"          country = parseaddress.country,",
				"          city = parseaddress.city",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}